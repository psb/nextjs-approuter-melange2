"use client";
// Generated by Melange

import * as Caml_option from "melange.js/caml_option.js";
import * as Curry from "melange.js/curry.js";
import * as Fetch from "melange-fetch/Fetch.js";
import * as Json__Json_decode from "melange-json/Json_decode.js";
import * as React from "react";
import * as JsxRuntime from "react/jsx-runtime";

function decodeJoke(json) {
  return {
          joke: Json__Json_decode.field("joke", Json__Json_decode.string, json),
          status: Json__Json_decode.field("status", Json__Json_decode.$$int, json),
          count: Json__Json_decode.field("count", Json__Json_decode.$$int, json)
        };
}

function decodeMessage(json) {
  return {
          message: Json__Json_decode.field("message", decodeJoke, json)
        };
}

function Page$default(Props) {
  var match = React.useReducer((function (state, action) {
          if (action) {
            return {
                    data: action._0,
                    loading: false
                  };
          } else {
            return {
                    data: state.data,
                    loading: true
                  };
          }
        }), {
        data: {
          joke: "My dog used to chase people on a bike a lot. It got so bad I had to take his bike away.",
          status: 200,
          count: 0
        },
        loading: false
      });
  var dispatch = match[1];
  var state = match[0];
  var loadingImage = function (param) {
    return JsxRuntime.jsx("img", {
                className: "mx-auto",
                alt: "laugh",
                src: "/laugh.svg",
                width: "200"
              });
  };
  var errorImage = function (param) {
    return JsxRuntime.jsx("img", {
                className: "mx-auto",
                alt: "error dog",
                src: "/500.jpg"
              });
  };
  var joke = function (data) {
    var count = data.count;
    return React.createElement(JsxRuntime.Fragment, undefined, JsxRuntime.jsx("p", {
                    children: data.joke,
                    className: "p-6 mb-2 rounded-lg text-black text-lg bg-yellow-400"
                  }), JsxRuntime.jsx("p", {
                    children: "You have requested " + count + " jokes.",
                    className: "p-2 mb-2 rounded-md text-black bg-orange-300"
                  }));
  };
  var buttons = function (currentCount) {
    return JsxRuntime.jsxs("div", {
                children: [
                  JsxRuntime.jsx("a", {
                        children: "Home",
                        className: "rounded-md p-4 mt-2 bg-slate-400 text-white hover:bg-slate-500",
                        href: "/"
                      }),
                  JsxRuntime.jsx("button", {
                        children: "Get another joke",
                        className: "rounded-md p-4 mt-2 bg-blue-500 text-white hover:bg-blue-600",
                        onClick: (function (param) {
                            Curry._1(dispatch, /* Loading */0);
                            var callback = function (data) {
                              Curry._1(dispatch, /* Loaded */{
                                    _0: data
                                  });
                            };
                            var payload = {};
                            payload["count"] = currentCount;
                            fetch("/api/joke", Fetch.RequestInit.make(/* Post */2, {
                                              "Content-Type": "application/json"
                                            }, Caml_option.some(JSON.stringify(payload)), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(undefined)).then(function (prim) {
                                      return prim.json();
                                    }).then(function (json) {
                                    var data = decodeMessage(json);
                                    Curry._1(callback, data.message);
                                    return Promise.resolve(undefined);
                                  }).catch(function (err) {
                                  var data = {
                                    joke: "",
                                    status: 0,
                                    count: currentCount
                                  };
                                  console.log("Error", err);
                                  Curry._1(callback, data);
                                  return Promise.resolve(undefined);
                                });
                          })
                      })
                ],
                className: "flex justify-around"
              });
  };
  return JsxRuntime.jsx("div", {
              children: state.loading ? loadingImage(undefined) : React.createElement(JsxRuntime.Fragment, undefined, state.data.status !== 200 ? errorImage(undefined) : joke(state.data), buttons(state.data.count)),
              className: "container mx-auto max-w-md text-center p-4"
            });
}

var $$default = Page$default;

export {
  $$default as default,
}
/* react Not a pure module */

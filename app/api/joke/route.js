// Generated by Melange

import * as Fetch from "melange-fetch/Fetch.js";
import * as Json__Json_decode from "melange-json/Json_decode.js";
import * as Server from "next/server";

function decodeJokeCount(json) {
  return {
          count: Json__Json_decode.field("count", Json__Json_decode.$$int, json)
        };
}

function decodeJoke(json) {
  return {
          joke: Json__Json_decode.field("joke", Json__Json_decode.string, json),
          _id: Json__Json_decode.field("id", Json__Json_decode.string, json),
          status: Json__Json_decode.field("status", Json__Json_decode.$$int, json)
        };
}

function POST(request) {
  var jokeCount = request.json().then(function (json) {
          return Promise.resolve(decodeJokeCount(json));
        }).catch(function (err) {
        console.log("Joke Count post error: ", err);
        return Promise.resolve({
                    count: 0
                  });
      });
  return fetch("https://icanhazdadjoke.com/", Fetch.RequestInit.make(/* Get */0, {
                          Accept: "application/json",
                          "User-Agent": "nextjs-approuter-reason (https://github.com/psb/nextjs-approuter-reason)"
                        }, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(undefined)).then(function (prim) {
                  return prim.json();
                }).then(function (json) {
                var data = decodeJoke(json);
                return jokeCount.then(function (jc) {
                            var body = {
                              joke: data.joke,
                              count: jc.count + 1 | 0,
                              status: data.status
                            };
                            return Promise.resolve(Server.NextResponse.json({
                                            message: body
                                          }, {
                                            status: 200
                                          }));
                          });
              }).catch(function (err) {
              console.log("server Error Json", err);
              return jokeCount.then(function (jc) {
                          var body = {
                            joke: err,
                            count: jc.count,
                            status: 500
                          };
                          return Promise.resolve(Server.NextResponse.json({
                                          message: body
                                        }, {
                                          status: 500
                                        }));
                        });
            });
}

export {
  POST ,
}
/* next/server Not a pure module */
